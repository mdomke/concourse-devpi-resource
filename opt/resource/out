#! /usr/bin/env python3

from glob import glob
import json
import os
import pkginfo
import sys

from devpi_common.metadata import get_pyversion_filetype
import requests

from common import get_auth
from common import get_index_url
from common import get_payload


def put(src):
    print("Using dir {}".format(src), file=sys.stderr)
    payload = get_payload()
    url = get_index_url(payload)
    auth = get_auth(payload)
    filename = payload['params'].get('file')
    filepath = None
    if not filename:
        pattern = payload['params']['fileglob']
        package_files = sorted(glob(os.path.join(src, pattern)))
        if package_files:
            filepath = package_files[-1]
            filename = os.path.basename(filepath)
    else:
        filepath = os.path.join(src, filename)
    if not os.path.exists(filepath):
        print("Couldn't find package!", file=sys.stderr)
        sys.exit(1)
    meta = get_metadata(filepath)

    meta[':action'] = 'submit'
    response = requests.post(url, meta, auth=auth)
    response.raise_for_status()

    meta['pyversion'], meta['filetype'] = get_pyversion_filetype(os.path.basename(filename))
    meta[':action'] = 'file_upload'
    files = {'content': (filename, open(filepath, 'rb'))}
    response = requests.post(url, meta, auth=auth, files=files)
    response.raise_for_status()

    print(json.dumps({
        'version': {'version': meta['version']},
        'metadata': [
            {'name': 'name', 'value': meta['name']},
            {'name': 'author', 'value': meta['author']},
            {'name': 'file', 'value': filename},
        ]
    }))


def get_metadata(path):
    info = pkginfo.get_metadata(path)
    return {attr: getattr(info, attr) for attr in info}


if __name__ == '__main__':
    put(sys.argv[1])
